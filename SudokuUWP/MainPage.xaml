<Page
    x:Class="SudokuUWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:SudokuUWP.Controls"
    xmlns:models="using:SudokuUWP.Models"
    xmlns:utils="using:SudokuUWP.Utils"
    xmlns:converters="using:SudokuUWP.Converters"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    DataContext="{x:Bind ViewModel, Mode=OneWay}"
    SizeChanged="Page_SizeChanged"
    KeyDown="Page_KeyDown">

    <Page.Resources>
        <Style TargetType="Button">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="AllowFocusOnInteraction" Value="False"/>
        </Style>
        <Flyout x:Key="numbersBoard" x:Name="numbersBoard">
            <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                    <Setter Property="Opacity" Value="0.85"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Background" Value="LightGray"/>
                </Style>
            </Flyout.FlyoutPresenterStyle>
            <controls:NumbersBoard X="{Binding X, Mode=OneWay}"
                                   Y="{Binding Y, Mode=OneWay}"
                                   SelectedNumber="{Binding DisplayValue, Mode=TwoWay}"
                                   BoxWidth="{x:Bind ViewModel.BoxWidth, Mode=OneWay}"
                                   BoxHeight="{x:Bind ViewModel.BoxWidth, Mode=OneWay}"
                                   FontSize="{x:Bind ViewModel.BoxFontSize, Mode=OneWay}"
                                   Selected="NumbersBoard_Selected">
            </controls:NumbersBoard>
        </Flyout>
        <converters:PlayingTimeConverter x:Key="playingTimeConverter"/>
    </Page.Resources>

    <RelativePanel Margin="2">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <utils:OrientationTrigger>
                            <utils:OrientationTrigger.Orientations>
                                <x:String>Portrait</x:String>
                                <x:String>PortraitFlipped</x:String>
                            </utils:OrientationTrigger.Orientations>
                        </utils:OrientationTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="controlArea.(RelativePanel.LeftOf)" Value="{x:Null}"/>
                        <Setter Target="controlArea.(RelativePanel.AlignTopWith)" Value="{x:Null}"/>
                        <Setter Target="controlArea.(RelativePanel.AlignBottomWith)" Value="{x:Null}"/>
                        <Setter Target="controlArea.(RelativePanel.Above)" Value="gameBoard"/>
                        <Setter Target="controlArea.(RelativePanel.AlignTopWithPanel)" Value="True"/>
                        <Setter Target="controlArea.Orientation" Value="Horizontal"/>
                        <Setter Target="pauseButton.Margin" Value="0,5,5,5"/>

                        <Setter Target="supportArea.(RelativePanel.RightOf)" Value="{x:Null}"/>
                        <Setter Target="supportArea.(RelativePanel.AlignTopWith)" Value="{x:Null}"/>
                        <Setter Target="supportArea.(RelativePanel.AlignBottomWith)" Value="{x:Null}"/>
                        <Setter Target="supportArea.(RelativePanel.Below)" Value="gameBoard"/>
                        <Setter Target="supportArea.Orientation" Value="Horizontal"/>
                        <Setter Target="hintButton.Margin" Value="0,5,5,5"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <GridView Name="gameBoard"
                  ItemsSource="{x:Bind ViewModel.Boxes, Mode=OneWay}"
                  RelativePanel.AlignHorizontalCenterWithPanel="True"
                  RelativePanel.AlignVerticalCenterWithPanel="True"
                  Padding="0"
                  SelectedItem="{x:Bind ViewModel.SelectedItem, Mode=TwoWay}"
                  IsHitTestVisible="{x:Bind ViewModel.IsPlaying, Mode=OneWay}"
                  Width="{x:Bind ViewModel.GameBoardWidth, Mode=OneWay}">
            <GridView.ItemTemplate>
                <DataTemplate x:DataType="models:BoxModel">
                    <controls:Box Value="{x:Bind Mode=TwoWay}"
                                  Tapped="Box_Tapped"
                                  FlyoutBase.AttachedFlyout="{StaticResource numbersBoard}">
                    </controls:Box>
                </DataTemplate>
            </GridView.ItemTemplate>
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid MaximumRowsOrColumns="{Binding Size, Mode=OneWay}"
                                   ItemHeight="{Binding BoxWidth, Mode=OneWay}"
                                   ItemWidth="{Binding BoxWidth, Mode=OneWay}"
                                   Orientation="Horizontal"
                                   Loaded="ItemsWrapGrid_Loaded"
                                   Margin="0">
                    </ItemsWrapGrid>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="MinHeight" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                </Style>
            </GridView.ItemContainerStyle>
        </GridView>

        <Grid RelativePanel.AlignHorizontalCenterWithPanel="True"
              RelativePanel.AlignVerticalCenterWithPanel="True"
              Width="{x:Bind ViewModel.GameBoardWidth, Mode=OneWay}"
              Height="{x:Bind ViewModel.GameBoardWidth, Mode=OneWay}"
              Visibility="{x:Bind ViewModel.PlayingVisibility, Mode=OneWay}"
              Background="LightGray">
            <TextBlock Text="Paused"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="50"/>
        </Grid>

        <StackPanel Name="supportArea"
                    RelativePanel.RightOf="gameBoard"
                    RelativePanel.AlignTopWith="gameBoard"
                    RelativePanel.AlignBottomWith="gameBoard">
            <Button Name="hintButton"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Command="{x:Bind ViewModel.HintCommand}"
                    IsEnabled="{x:Bind ViewModel.IsHintEnabled, Mode=OneWay}">
                <Button.Content>
                    <StackPanel>
                        <SymbolIcon Symbol="Emoji2"/>
                        <TextBlock Text="Hint"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <!--<Button Content="Undo"
                    Margin="0,0,0,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"/>-->
            <Button Name="solveGameBtn"
                    Command="{x:Bind ViewModel.SolveGameCommand}"
                    IsEnabled="{x:Bind ViewModel.IsPlaying, Mode=OneWay}">
                <Button.Content>
                    <StackPanel>
                        <SymbolIcon Symbol="ViewAll"/>
                        <TextBlock Text="Solve"/>
                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel Name="controlArea"
                       RelativePanel.LeftOf="gameBoard"
                       RelativePanel.AlignTopWith="gameBoard"
                       RelativePanel.AlignBottomWith="gameBoard">
            <Button Name="pauseButton"
                    FontSize="20"
                    Command="{x:Bind ViewModel.PauseCommand}"
                    IsEnabled="{x:Bind ViewModel.IsPauseOrPlaying, Mode=OneWay}">
                <Button.Content>
                    <StackPanel>
                        <TextBlock Text="{x:Bind ViewModel.PlayingTime, Mode=OneWay, Converter={StaticResource playingTimeConverter}}"
                                   Foreground="Blue"/>
                        <SymbolIcon Symbol="Pause"
                                    Visibility="{x:Bind ViewModel.PauseVisibility, Mode=OneWay}"/>
                        <SymbolIcon Symbol="Play"
                                    Visibility="{x:Bind ViewModel.PlayingVisibility, Mode=OneWay}"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Command="{x:Bind ViewModel.NewGameCommand}">
                <Button.Content>
                    <StackPanel>
                        <SymbolIcon Symbol="Refresh"/>
                        <TextBlock Text="Refresh"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button Content="{x:Bind ViewModel.Level, Mode=OneWay}">
                <Button.Flyout>
                    <MenuFlyout x:Name="levelMenu" Placement="Right"/>
                </Button.Flyout>
            </Button>
            <Button Command="{x:Bind ViewModel.NewGameWithOptionsCommand}">
                <Button.Content>
                    <StackPanel>
                        <SymbolIcon Symbol="Add"/>
                        <TextBlock Text="New"/>
                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignRightWithPanel="True"
                    Margin="0,0,5,0">
            <TextBlock Text="Sudoku @hoaftq"
                       Foreground="DarkGray"
                       HorizontalAlignment="Right"/>
            <HyperlinkButton NavigateUri="https://github.com/hoaftq/SudokuLib"
                             Content="Source code"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Right"/>
        </StackPanel>
    </RelativePanel>
</Page>
